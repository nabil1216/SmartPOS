@using SmartPOS.Entity.EntityModels
@using SmartPOS.App.Models


@model SmartPOS.App.Models.PurchaseOrderVm
@{
    ViewBag.Title = "PurchaseOrder";
    Layout = "~/Views/Shared/_Master.cshtml";
}
<link href="~/Content/AutoComplete.css" rel="stylesheet" />

<h2>PurchaseOrder</h2>
<div class="card">
    <div class="card-block">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal form-material" }))
        {
            @Html.AntiForgeryToken()
            @*<h4>Enter Currency Info</h4>*@
            <hr />
            @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
            <div class="form-group">
                @Html.LabelFor(m => m.ModelNo, new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.TextBoxFor(m => m.ModelNo, new { @class = "form-control form-control-line" })
                    @Html.ValidationMessageFor(m => m.ModelNo)
                </div>
            </div>
            @*<div class="form-group">
                @Html.LabelFor(m => m.Sign, new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.TextBoxFor(m => m.Sign, new { @class = "form-control form-control-line" })
                    @Html.ValidationMessageFor(m => m.Sign)
                </div>
            </div>*@
            <div class="form-group">
                <div class="col-md-12">
                    @Html.HiddenFor(m => m.Id)
                    <input type="submit" class="btn btn-success" value="Save" name="Currency" />
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>

    <script>
        @*function LoadCurrencyInfo(id) {
            if (id != null) {
                var json = { id: id };
                $.ajax({
                    url: '@Url.Action("GetCurrencyById", "Currency")',
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (result) {
                        $('#Name').val(result.Name);
                        $('#Sign').val(result.Sign);
                        $('#Id').val(result.Id);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    },
                    complete: function () {

                    }
                });
            }
        }*@

        $(document).ready(function() {
            $('#CurrencyTable').DataTable();
        });

        $(document).ready(function() {
            $("#ModelNo").autocomplete({
                source: function(request, response) {
                    $.ajax({
                        url: "/PurchaseOrder/FillCategory",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function(data) {
                            response($.map(data,
                                function(item) {
                                    return { label: item.Name, value: item.Name };
                                }));

                        }
                    });
                },
                messages: {
                    noResults: "",
                    results: function(count) {
                        return count + (count > 1 ? ' results' : ' result ') + ' found';
                    }
                }
            });
        });

    </script>
}

